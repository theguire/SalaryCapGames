@*@model SalaryCapData.Data.Models.League*@
@model LeagueViewModel
@{
    ViewData[ "Title" ] = "Create";

}

<br />
<br />
<h2>Create League</h2>
<hr />

<form asp-action="Create" asp-route-returnurl="@ViewData["ReturnUrl"]">
    <div class="form-border">
        <div class="text-danger" asp-validation-summary="ModelOnly"></div>
        <div class="form-group row">
            <div class="col-2">
                <label class="custom-label" asp-for="Name"></label>
            </div>
            <div class="col-4">
                <input asp-for="Name" class="form-control" />
            </div>
            <span class="text-danger" asp-validation-for="Name"></span>
        </div>
        <div class="form-group row">
            <div class="col-2">
                <label class="custom-label" asp-for="MaxSize"></label>
            </div>
            <div class="col-4">
                <input asp-for="MaxSize" class="form-control" />
            </div>
            <span class="text-danger" asp-validation-for="MaxSize"></span>
        </div>
        <div class="form-group row">
            <div class="col-2">
                <label class="custom-label" asp-for="IsPrivate"></label>
            </div>
            <div class="col-1">
                <input asp-for="IsPrivate" class="form-control" />
            </div>
        </div>

        <br />
        <div class="form-group row">
            <div class="col-2">

            </div>
            <div class="col-4">
                <input type="submit" value="Create" class="btn btn-primary" />
                <a asp-action="Index" class="btn btn-success">Back to List</a>
            </div>
        </div>
    </div>
</form>


@section Scripts {
    @{await Html.RenderPartialAsync( "_ValidationScriptsPartial" );}
}


